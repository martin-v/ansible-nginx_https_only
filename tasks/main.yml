---


- name: Install nginx package
  package: name=nginx state=present


- name: Ensure nginx dhparams_path folder
  file: state=directory path={{ nginx_https_dhparam_path | dirname }}

- name: Create secure Ephemeral Diffie-Hellman parameter
  shell: openssl dhparam -out {{ nginx_https_dhparam_path }} {{ nginx_https_dhparam_size }}
  args:
    creates: "{{ nginx_https_dhparam_path }}"
  tags:
  - skip_ansible_lint


- name: Remove potential dupplicate ssl_prefer_server_ciphers
  lineinfile:
    dest: /etc/nginx/nginx.conf
    regexp: '.*ssl_prefer_server_ciphers.*'
    state: absent
- name: Remove potential dupplicate ssl_protocols
  lineinfile:
    dest: /etc/nginx/nginx.conf
    regexp: '.*ssl_protocols.*'
    state: absent

- name: Deploy tls config for nginx
  template:
    src: templates/tls.conf.j2
    dest: /etc/nginx/conf.d/tls.conf
  notify: Restart nginx


- name: Remove default nginx config
  file:
    state: absent
    path: /etc/nginx/sites-enabled/default
  notify: Restart nginx

- name: Deploy nginx http config
  template:
    src: templates/http.conf.j2
    dest: /etc/nginx/sites-available/http.conf
  notify: Restart nginx

- name: Enable nginx http config
  file:
    src: /etc/nginx/sites-available/http.conf
    dest: /etc/nginx/sites-enabled/http.conf
    state: link
  notify: Restart nginx

- name: Ensure nginx is started and runs on startup.
  service: name=nginx state=started enabled=yes


- name: Set default value for next roles dehydrated_domains, if not set
  set_fact:
     dehydrated_domains: "{{ nginx_https_server_name }}"
  when: dehydrated_domains is undefined

- name: Set default value for next roles dehydrated_deploy_cert, if not set
  set_fact:
     dehydrated_deploy_cert: |
       mkdir -p /etc/nginx/ssl/${DOMAIN}
       cp "${KEYFILE}" "${CERTFILE}" "${FULLCHAINFILE}" "${CHAINFILE}" /etc/nginx/ssl/${DOMAIN}
       chown root:www-data /etc/nginx/ssl/${DOMAIN}/*
       chmod 600 /etc/nginx/ssl/${DOMAIN}/*
       hash systemctl 2>/dev/null && systemctl restart nginx.service
  when: dehydrated_deploy_cert is undefined
